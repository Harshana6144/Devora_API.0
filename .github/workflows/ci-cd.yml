name: CI/CD FastAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov httpx

    - name: Run unit tests
      run: |
        pytest -v --maxfail=1 --disable-warnings --cov=.

    - name: Run API health check test
      run: |
        # Start FastAPI app in background
        nohup uvicorn api:app --host 127.0.0.1 --port 8000 &
        sleep 5  # wait for server

        # Test if API root endpoint returns 200
        python - <<EOF
        import httpx, sys
        try:
            r = httpx.get("http://127.0.0.1:8000")
            assert r.status_code == 200, f"Expected 200, got {r.status_code}"
            print("✅ Health check passed")
        except Exception as e:
            print("❌ Health check failed:", e)
            sys.exit(1)
        EOF

    - name: Deploy to server via SSH
      if: github.ref == 'refs/heads/main'  # Only deploy from main branch
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        timeout: 60s
        script: |
          # Go to project directory
          cd /home/dpd/Devora_API.0

          # Activate virtual environment
          source venv/bin/activate

          # Pull latest code
          git pull origin main

          # Install dependencies
          pip install -r requirements.txt

          # Restart FastAPI app via PM2
          pm2 restart Devora_API || pm2 start venv/bin/uvicorn --name Devora_API --interpreter python3 -- api:app --host 0.0.0.0 --port 8000
          pm2 save

          # Restart Nginx
          sudo systemctl restart nginx
